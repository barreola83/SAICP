<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="mnuNewEarmingRecord.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>54</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAA
        AAD///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8BckoNJXFJDXlySg2LckoNi3JKDYtySg2LckoNi3JKDYtySg2LckoNi3JKDYtySg2LckoNi29I
        DI1PLwSVUjAEO3FJDb9ySQ3/c0sN/39iFf+MfB3/k4oi/4x7Hf+EbBj/dlEP/3JJDf94VBD/fF0T/3Za
        Ev9YPwn/VkQK/0YoAuNySQ3nckkN/5OIIf+ruDD/s8g2/7TJNv+zyDX/sMEz/6CiKf+Fbhj/d1UR/2tS
        D/9ZRgv/TTgG/1lIDP9DJgD7ckkN84VuGf+0yTb/tMk2/7TJNv+0yTb/tMk2/7TJNv+0yTb/s8c1/3ht
        GP9MNQX/TTcG/0InAf8/IwD/QSQA/3JJDfuWjyP/tMk2/7TJNv+0yTb/tMk2/7TJNv+0yTb/tMk2/7TJ
        Nv+pujH/maIp/5umKv9/fh3/QScB/z8jAP9ySQ3/hnEZ/7TJNv+0yTb/tMk2/7TJNv+yxTX/s8c1/7PI
        Nf+zyDX/tMk2/7TJNv+0yTb/tMk2/3p3G/9BJgH/ckkN/3JKDf+lrCz/tMk2/6m1L/+OhSD/k5om/62/
        M/+cpyv/s8g1/7TJNv+0yTb/tMk2/7TJNv+Zoyn/SzQF/3NKDf+GcRn/lpAj/7DBM/+boin/TTQF/3l1
        G/+GhyD/kJcl/7TJNv+0yTb/tMk2/7TJNv+0yTb/n6ss/1E8CP9zSg3/e1oS/39oFv91ahf/ZVkR/0In
        Af9eUA7/hokh/4iLIv+0yTb/tMk2/7TJNv+0yTb/tMk2/5KZJv9GLAP/cEgM/2ZBCv9sYRT/V0UL/z8k
        AP8/IwD/QScB/0cvBP9VQgr/m6Yq/7TJNv+0yTb/s8g1/6SzLv9TPwn/PyMA/1o4B/9UPgj/WkoM/1dF
        C/9OOAf/PyMA/z8jAP8/IwD/QCQA/1I/Cf9/fh3/kJUl/317HP9YSAv/PyMA/z8jAP9DJgH5VEEK/2BS
        D/9gUg//U0AJ/z8jAP9JMgX/UT0I/085B/9RPAj/TjkH/1A8CP9POgf/UTwI/003Bv9HLAP5SCkBvUYt
        A/9KMgX/SjIF/0UsA/8/IwD/TDYG/1pKDf9VQgr/WUkM/1VCCv9ZSQz/VkQL/1lJDP9UQQn/UjYGvVMy
        BRdOLQR1SCoCoUgpAqVIKQKlSCkCpUgpAqVIKQKlSCkCpUgpAqVIKQKlSCkCpUgpAqVIKgKhTi0EdVMy
        BRf///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8BAAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//w==
</value>
  </data>
</root>